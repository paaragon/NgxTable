{"version":3,"file":"paaragon-ngx-table.js.map","sources":["ng://@paaragon/ngx-table/lib/utils/DeepMerge.ts","ng://@paaragon/ngx-table/lib/ngx-table.component.ts","ng://@paaragon/ngx-table/lib/ngx-table-header/ngx-table-header.component.ts","ng://@paaragon/ngx-table/lib/ngx-table-body/ngx-table-body.component.ts","ng://@paaragon/ngx-table/lib/ngx-table-filter/ngx-table-filter.component.ts","ng://@paaragon/ngx-table/lib/ngx-table-create/ngx-table-create.component.ts","ng://@paaragon/ngx-table/lib/ngx-table.module.ts"],"sourcesContent":["export default class DeepMerge {\r\n    private static isMergeableObject(val) {\r\n        const nonNullObject = val && typeof val === 'object';\r\n\r\n        return nonNullObject\r\n            && Object.prototype.toString.call(val) !== '[object RegExp]'\r\n            && Object.prototype.toString.call(val) !== '[object Date]';\r\n    }\r\n\r\n    private static emptyTarget(val) {\r\n        return Array.isArray(val) ? [] : {};\r\n    }\r\n\r\n    private static cloneIfNecessary(value, optionsArgument) {\r\n        const clone = optionsArgument && optionsArgument.clone === true;\r\n        return (clone && DeepMerge.isMergeableObject(value)) ?\r\n            DeepMerge.deepmerge(DeepMerge.emptyTarget(value), value, optionsArgument) :\r\n            value;\r\n    }\r\n\r\n    private static defaultArrayMerge(target, source, optionsArgument) {\r\n        const destination = target.slice();\r\n        source.forEach((e, i) => {\r\n            if (typeof destination[i] === 'undefined') {\r\n                destination[i] = DeepMerge.cloneIfNecessary(e, optionsArgument);\r\n            } else if (DeepMerge.isMergeableObject(e)) {\r\n                destination[i] = DeepMerge.deepmerge(target[i], e, optionsArgument);\r\n            } else if (target.indexOf(e) === -1) {\r\n                destination.push(DeepMerge.cloneIfNecessary(e, optionsArgument));\r\n            }\r\n        });\r\n        return destination;\r\n    }\r\n\r\n    private static mergeObject(target, source, optionsArgument) {\r\n        const destination = {};\r\n        if (DeepMerge.isMergeableObject(target)) {\r\n            Object.keys(target).forEach((key) => {\r\n                destination[key] = DeepMerge.cloneIfNecessary(target[key], optionsArgument);\r\n            });\r\n        }\r\n        Object.keys(source).forEach((key) => {\r\n            if (!DeepMerge.isMergeableObject(source[key]) || !target[key]) {\r\n                destination[key] = DeepMerge.cloneIfNecessary(source[key], optionsArgument);\r\n            } else {\r\n                destination[key] = DeepMerge.deepmerge(target[key], source[key], optionsArgument);\r\n            }\r\n        });\r\n        return destination;\r\n    }\r\n\r\n    static deepmerge(target, source, optionsArgument?) {\r\n        const array = Array.isArray(source);\r\n        const options = optionsArgument || { arrayMerge: DeepMerge.defaultArrayMerge };\r\n        const arrayMerge = options.arrayMerge || DeepMerge.defaultArrayMerge;\r\n\r\n        if (array) {\r\n            return Array.isArray(target) ?\r\n                arrayMerge(target, source, optionsArgument) :\r\n                DeepMerge.cloneIfNecessary(source, optionsArgument);\r\n        } else {\r\n            return DeepMerge.mergeObject(target, source, optionsArgument);\r\n        }\r\n    }\r\n\r\n    static deepmergeAll(array, optionsArgument) {\r\n        if (!Array.isArray(array) || array.length < 2) {\r\n            throw new Error('first argument should be an array with at least two elements');\r\n        }\r\n\r\n        // we are sure there are at least 2 values, so it is safe to have no initial value\r\n        return array.reduce((prev, next) => {\r\n            return DeepMerge.deepmerge(prev, next, optionsArgument);\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';\r\nimport DeepMerge from './utils/DeepMerge';\r\nimport { NgxTableHeaders, NgxTableConfig, NgxTableOrder, NgxTableFilter, NgxTableNew } from './ngx-table.types';\r\n\r\n@Component({\r\n  selector: 'ngx-table',\r\n  templateUrl: './ngx-table.component.html',\r\n  styleUrls: ['./ngx-table.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxTableComponent implements OnInit {\r\n\r\n  @Input()\r\n  humanHeaders: NgxTableHeaders;\r\n\r\n  headers: NgxTableHeaders;\r\n\r\n  /**\r\n   * Data of the table. Array of content\r\n   */\r\n  content: any[];\r\n  @Input('data')\r\n  set data(data: any[]) {\r\n    this.content = data;\r\n    if (this.content && this.content.length > 0) {\r\n      this.headers = this.getHeadersFromData(this.content);\r\n      if (!this.humanHeaders) {\r\n        this.humanHeaders = this.headers;\r\n      }\r\n    }\r\n  }\r\n\r\n  get data(): any[] {\r\n    return this.content;\r\n  }\r\n\r\n  /**\r\n   * Config of the table\r\n   */\r\n  configBK: NgxTableConfig = {\r\n    placeholders: [],\r\n    order: {\r\n      enable: false\r\n    },\r\n    filter: {\r\n      enable: false,\r\n      debounceTime: 200,\r\n      validations: {}\r\n    },\r\n    create: {\r\n      enable: false,\r\n      validations: {}\r\n    }\r\n  };\r\n\r\n  mergedConfig: NgxTableConfig;\r\n\r\n  @Input('config')\r\n  set config(conf: NgxTableConfig) {\r\n    this.mergedConfig = DeepMerge.deepmerge(this.configBK, conf);\r\n  }\r\n\r\n  get config(): NgxTableConfig {\r\n    return this.mergedConfig;\r\n  }\r\n\r\n  @Output() order: EventEmitter<NgxTableOrder> = new EventEmitter<NgxTableOrder>();\r\n\r\n  @Output() filter: EventEmitter<NgxTableFilter> = new EventEmitter<NgxTableFilter>();\r\n\r\n  @Output() create: EventEmitter<NgxTableNew> = new EventEmitter<NgxTableNew>();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onOrder(orderObj: NgxTableOrder) {\r\n    this.order.emit(orderObj);\r\n  }\r\n\r\n  onFilter(filterObj: NgxTableFilter) {\r\n    this.filter.emit(filterObj);\r\n  }\r\n\r\n  onCreate(newObj: NgxTableNew) {\r\n    this.create.emit(newObj);\r\n  }\r\n\r\n  enableFilter() {\r\n    return this.mergedConfig.filter.enable;\r\n  }\r\n\r\n  enableCreate() {\r\n    return this.mergedConfig.create.enable;\r\n  }\r\n\r\n  enableBody() {\r\n    return this.content && this.content.length > 0;\r\n  }\r\n\r\n  private getHeadersFromData(data: any[]): NgxTableHeaders {\r\n    return Object.keys(data[0]);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NgxTableHeaders, NgxTableOrder, NgxTableConfig } from '../ngx-table.types';\nimport { faHashtag, faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: '[ngx-table-header]',\n  templateUrl: './ngx-table-header.component.html',\n  styleUrls: ['./ngx-table-header.component.scss']\n})\nexport class NgxTableHeaderComponent implements OnInit {\n\n  orderObj: NgxTableOrder;\n\n  faHashtag = faHashtag;\n  faCaretDown = faCaretDown;\n  faCaretUp = faCaretUp;\n\n  @Input() headers: NgxTableHeaders = [];\n\n  @Input() humanHeaders: NgxTableHeaders;\n\n  @Input() config: NgxTableConfig;\n\n  @Output() order: EventEmitter<NgxTableOrder> = new EventEmitter<NgxTableOrder>();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (this.config) {\n\n    }\n  }\n\n  onOrder(header: string) {\n    if (!header || !this.config.order.enable) {\n      return;\n    }\n    if (this.order && this.orderObj.field === header && this.orderObj.direction === 1) {\n      this.orderObj = {\n        field: header,\n        direction: -1\n      };\n    } else if (this.order && this.orderObj.field === header && this.orderObj.direction === -1) {\n      this.order = null;\n    } else {\n      this.orderObj = {\n        field: header,\n        direction: 1\n      };\n    }\n\n    this.order.emit(this.orderObj);\n  }\n\n  isAsc(header: string) {\n    return this.order && this.orderObj.field === header && this.orderObj.direction === 1;\n  }\n\n  isDesc(header: string) {\n    return this.order && this.orderObj.field === header && this.orderObj.direction === -1;\n  }\n\n  showLastColumn() {\n    return this.config.create.enable || this.config.filter.enable;\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { NgxTableHeaders, NgxTableConfig } from '../ngx-table.types';\n\n@Component({\n  selector: '[ngx-table-body]',\n  templateUrl: './ngx-table-body.component.html',\n  styleUrls: ['./ngx-table-body.component.scss']\n})\nexport class NgxTableBodyComponent implements OnInit {\n\n  @Input()\n  config: NgxTableConfig;\n\n  @Input()\n  data: any[] = [];\n\n  @Input()\n  headers: NgxTableHeaders;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  showLastColumn() {\n    return this.config.create.enable || this.config.filter.enable;\n  }\n}\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NgxTableHeaders, NgxTableFilter, NgxTableConfig, NgxTablePlaceholders } from '../ngx-table.types';\nimport { faFilter } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: '[ngx-table-filter]',\n  templateUrl: './ngx-table-filter.component.html',\n  styleUrls: ['./ngx-table-filter.component.scss']\n})\nexport class NgxTableFilterComponent implements OnInit {\n\n  faFilter = faFilter;\n\n  sub = null;\n\n  filters: NgxTableFilter = {};\n  errors: { [key: string]: { error: boolean, errorMsg: string } } = {};\n\n  configBK: NgxTableConfig;\n  placeholders: NgxTablePlaceholders;\n  @Input()\n  set config(config: NgxTableConfig) {\n    this.configBK = config;\n    this.buildPlaceholders();\n    this.subscribeDebounce();\n  }\n\n  get config() {\n    return this.configBK;\n  }\n\n  private headersBK;\n\n  @Input()\n  set headers(headers: NgxTableHeaders) {\n    this.headersBK = headers;\n    this.initFilters();\n  }\n\n  get headers(): NgxTableHeaders {\n    return this.headersBK;\n  }\n\n  @Output() filter: EventEmitter<NgxTableFilter> = new EventEmitter<NgxTableFilter>();\n  debouncer: Subject<NgxTableFilter> = new Subject<NgxTableFilter>();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  onFilter() {\n    const f: NgxTableFilter = {};\n    for (const attr in this.filters) {\n      if (this.filters[attr].value) {\n        f[attr] = this.filters[attr];\n      }\n    }\n    if (!this.validateFilters(f)) {\n      return;\n    }\n    this.debouncer.next(f);\n  }\n\n  hasValidationError(header: string) {\n    return this.errors && this.errors[header] && this.errors[header].error;\n  }\n\n  cleanFilters() {\n    for (const attr in this.filters) {\n      if (this.filters[attr]) {\n        this.filters[attr].value = null;\n      }\n    }\n    this.onFilter();\n  }\n\n  private validateFilters(f: NgxTableFilter): boolean {\n\n    this.errors = {};\n    const validations = this.config.filter.validations;\n\n    if (Object.keys(validations).length === 0) {\n      return true;\n    }\n\n    for (const attr in f) {\n      if (!validations[attr]) {\n        continue;\n      }\n      const text = f[attr].value;\n\n      const regex = new RegExp(validations[attr].regex);\n\n      if (!regex.test(text)) {\n        this.errors[attr] = {\n          error: true,\n          errorMsg: validations[attr].errorMsg\n        };\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private initFilters() {\n    if (this.filters && Object.keys(this.filters).length > 0) {\n      return;\n    }\n    for (const header of this.headers) {\n      this.filters[header] = {\n        operator: null,\n        value: null\n      };\n    }\n  }\n\n  private subscribeDebounce() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n    this.sub = this.debouncer\n      .pipe(debounceTime(this.config.filter.debounceTime))\n      .subscribe((val) => {\n        console.log(val);\n        this.filter.emit(val);\n      });\n  }\n\n  private buildPlaceholders() {\n    if (this.config.placeholders) {\n      this.placeholders = this.config.placeholders;\n    } else {\n      this.placeholders = this.headers;\n    }\n  }\n\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NgxTableConfig, NgxTablePlaceholders, NgxTableHeaders, NgxTableNew } from '../ngx-table.types';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: '[ngx-table-create]',\n  templateUrl: './ngx-table-create.component.html',\n  styleUrls: ['./ngx-table-create.component.scss']\n})\nexport class NgxTableCreateComponent implements OnInit {\n\n  faPlus = faPlus;\n\n  errors: { [key: string]: { error: boolean, errorMsg: string } } = {};\n  newObj: NgxTableNew = {};\n\n  buttonEnable = true;\n\n  @Input() headers: NgxTableHeaders;\n\n  placeholders: NgxTablePlaceholders;\n\n  configBK: NgxTableConfig;\n  @Input()\n  set config(config: NgxTableConfig) {\n    this.configBK = config;\n    this.buildPlaceholders();\n  }\n\n  get config() {\n    return this.configBK;\n  }\n\n  @Output()\n  create: EventEmitter<NgxTableNew> = new EventEmitter<NgxTableNew>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  validate() {\n    this.errors = {};\n    this.buttonEnable = true;\n    if (!this.config.create.validations) {\n      return true;\n    }\n    for (const attr in this.newObj) {\n      if (!this.newObj[attr]) {\n        continue;\n      }\n      const validation = this.config.create.validations[attr];\n      if (!validation) {\n        continue;\n      }\n      const reg = new RegExp(validation.regex);\n      if (!reg.test(this.newObj[attr])) {\n        this.errors[attr] = {\n          error: true,\n          errorMsg: validation.errorMsg\n        };\n        this.buttonEnable = false;\n        return false;\n      }\n    }\n    return true;\n  }\n\n  hasValidationError(header: string) {\n    return this.errors && this.errors[header] && this.errors[header].error;\n  }\n\n  onCreate() {\n    if (!this.validate()) {\n      return;\n    }\n\n    this.create.emit(this.newObj);\n    this.newObj = {};\n  }\n\n  private buildPlaceholders() {\n    if (this.config.placeholders) {\n      this.placeholders = this.config.placeholders.map(p => `New ${p}`);\n    } else {\n      this.placeholders = this.headers.map(h => `New ${h}`);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgxTableComponent } from './ngx-table.component';\nimport { NgxTableHeaderComponent } from './ngx-table-header/ngx-table-header.component';\nimport { NgxTableBodyComponent } from './ngx-table-body/ngx-table-body.component';\nimport { NgxTableFilterComponent } from './ngx-table-filter/ngx-table-filter.component';\nimport { NgxTableCreateComponent } from './ngx-table-create/ngx-table-create.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\n@NgModule({\n  declarations: [NgxTableComponent, NgxTableHeaderComponent, NgxTableBodyComponent, NgxTableFilterComponent, NgxTableCreateComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FontAwesomeModule\n  ],\n  exports: [\n    NgxTableComponent\n  ]\n})\nexport class NgxTableModule { }\n"],"names":[],"mappings":"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"}
